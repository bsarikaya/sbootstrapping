<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.27 (Ruby 3.0.2) -->
<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-irtf-t2trg-security-setup-iot-devices-00" category="info" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.17.0 -->
  <front>
    <title abbrev="IoT initial security setup">Terminology and processes for initial security setup of IoT devices</title>
    <seriesInfo name="Internet-Draft" value="draft-irtf-t2trg-security-setup-iot-devices-00"/>
    <author initials="M." surname="Sethi" fullname="Mohit Sethi">
      <organization>Aalto University</organization>
      <address>
        <postal>
          <city>Espoo</city>
          <region/>
          <code>02150</code>
          <country>Finland</country>
        </postal>
        <email>mohit@iki.fi</email>
      </address>
    </author>
    <author initials="B." surname="Sarikaya" fullname="Behcet Sarikaya">
      <organization/>
      <address>
        <postal>
          <street/>
          <street/>
          <city/>
          <region/>
          <code/>
          <country/>
        </postal>
        <email>sarikaya@ieee.org</email>
      </address>
    </author>
    <author initials="D." surname="Garcia-Carrillo" fullname="Dan Garcia-Carrillo">
      <organization>University of Oviedo</organization>
      <address>
        <postal>
          <street/>
          <city>Oviedo</city>
          <region/>
          <code>33207</code>
          <country>Spain</country>
        </postal>
        <email>garciadan@uniovi.es</email>
      </address>
    </author>
    <date year="2023" month="March" day="30"/>
    <abstract>
      <t>This document provides an overview of terms that are commonly used when discussing the initial security setup of Internet of Things (IoT) devices. This document also presents a brief but illustrative survey of protocols and standards available for initial security setup of IoT devices. For each protocol, we identify the terminology used, the entities involved, the initial assumptions, the processes necessary for completion, and the knowledge imparted to the IoT devices after the setup is complete.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="introduction">
      <name>Introduction</name>
      <t>Initial security setup for a device refers to any process that takes place before a device can become operational. The phrase "initial security setup" intentionally includes the term "security" as setup of devices without adequate security or with insecure processes is no longer acceptable. The initial security setup process, among other things, involves network discovery and selection, access authentication, configuration of necessary credentials and parameters.</t>
      <t>Initial security setup for IoT devices is challenging because the size of an IoT network varies from a couple of devices to tens of thousands, depending on the application. Moreover, devices in IoT networks are produced by a variety of vendors and are typically heterogeneous in terms of the constraints on their power supply, communication capability, computation capacity, and user interfaces available. This challenge of initial security setup in IoT was identified by <xref target="Sethi14">Sethi et al.</xref> while developing a solution for smart displays.</t>
      <t>Initial security setup of devices typically also involves providing them with some sort of network connectivity. The functionality of a disconnected device is rather limited. Initial security setup of devices often assumes that some network has been setup a-priori. Setting up and maintaining a network itself is challenging. For example, users may need to configure the network name (called as Service Set Identifier (SSID) in Wi-Fi networks) and passphrase before new devices can be setup. Specifications such as the Wi-Fi Alliance Simple Configuration <xref target="simpleconn"/> help users setup networks. However, this document is only focused on terminology and processes associated with initial security setup of devices and excludes any discussion on setting up networks.</t>
      <t>There are several terms that are used in the context of initial security setup of devices:</t>
      <ul spacing="normal">
        <li>Bootstrapping</li>
        <li>Provisioning</li>
        <li>Onboarding</li>
        <li>Enrollment</li>
        <li>Commissioning</li>
        <li>Initialization</li>
        <li>Configuration</li>
        <li>Registration</li>
        <li>Discovery</li>
      </ul>
      <t>In addition to using a variety of different terms, initial security setup mechanisms can rely on a number of entities. For example, a companion smartphone device maybe necessary for some initial security setup mechanisms. Moreover, security setup procedures have diverse initial assumptions about the device being setup. As an example, an initial security setup mechanism may assume that the device is provisioned with a pre-shared key and a list of trusted network identifiers. Finally, initial security setup mechanisms impart different information to the device after completion. For example, some mechanisms may only provide a key for use with an authorization server, while others may configure elaborate access control lists directly.</t>
      <t>The next section provides an overview of some standards and protocols for initial security setup of IoT devices. For each mechanism, the following are explicitly identified:</t>
      <ul spacing="normal">
        <li>Terminology used</li>
        <li>Entities or "players" involved</li>
        <li>Initial assumptions about the device</li>
        <li>Processes necessary for completion</li>
        <li>Knowledge imparted to the device after completion</li>
      </ul>
    </section>
    <section anchor="usage">
      <name>Standards and Protocols</name>
      <section anchor="device-provisioning-protocol-dpp">
        <name>Device Provisioning Protocol (DPP)</name>
        <t>The Wi-Fi Alliance Device provisioning protocol (DPP) <xref target="dpp"/> describes itself as a standardized protocol for providing user friendly Wi-Fi setup while maintaining or increasing the security. DPP relies on a configurator, e.g. a smartphone application, for setting up all other devices, called enrollees, in the network. DPP has the following three phases/sub-protocols:</t>
        <ul spacing="normal">
          <li>Bootstrapping: The configurator obtains bootstrapping information from the enrollee using an out-of-band channel such as scanning a QR code or tapping NFC. The bootstrapping information includes the public-key of the device and metadata such as the radio channel on which the device is listening.</li>
          <li>Authentication: In DPP, either the configurator or the enrollee can initiate the authentication protocol. The side initiating the authentication protocol is called as the initiator while the other side is called the responder. The authentication sub-protocol provides authentication of the responder to an initiator. It can optionally authenticate the initiator to the responder (only if the bootstrapping information was exchange out-of-band in both directions).</li>
          <li>Configuration: Using the key established from the authentication protocol, the enrollee asks the configurator for network information such as the SSID and passphrase of the access point.</li>
        </ul>
        <t>DPP has the following characteristics:</t>
        <ul spacing="normal">
          <li>Terms: Bootstrapping, configuration, discovery, enrollment, provisioning.</li>
          <li>Players: Authenticator, Client, Configurator, Device, Initiator, Manufacturer, Owner, Peer, Persona, Responder, User, Enrollee</li>
          <li>Initial beliefs assumed in the device: There are two entities involved in the DPP protocol, the Initiator and Responder. These entities as a starting point do not have a trust relation, nor do they share credentials or key material. DPP uses a decentralized architecture with no central authority to coordinate or control authentication and rely on a direct trust model.
 In DPP, authentication does not rely on a pre-existing trust relation with a third-party or centralized entity, hence all entities involved in DPP need to perform the required validation.</li>
          <li>Processes: Bootstrapping, authentication,  provisioning, and network access.
Bootstrapping: To establish a secure provisioning connection, the devices exchange public bootstrapping keys.
Authentication: To establish trust and build a secure channel, the devices employ the DPP Authentication protocol's bootstrapping keys.
Configuration: The Configurator uses the DPP Configuration protocol to provision the Enrollee through the secure channel created during DPP Authentication.
Network access: The Enrollee establishes network access using the newly provisioned credentials.</li>
          <li>Beliefs imparted to the device after protocol execution: DPP bootstrapping relies on the transfer of the public-key that is expected to be trusted. The beliefs when mutual authentication is run, relies on the trust of a succesful DPP bootstrapping. When mutual authentication is not supported, a device that can control when and how its own public key is bootstrapped, can perform a weak authentication to any entity that knows its public key.</li>
        </ul>
      </section>
      <section anchor="open-mobile-alliance-oma-lightweight-m2m-lwm2m">
        <name>Open Mobile Alliance (OMA) Lightweight M2M (LwM2M)</name>
        <t>The OMA, (recently succeeded by OMA SpecWorks) LwM2M specification (which includes NB-IoT) <xref target="oma"/> defines an architecture where a new device (LwM2M client) contacts a bootstrap server which is responsible for provisioning essential information such as credentials. After receiving this essential information, the LwM2M client device registers itself with one or more LwM2M Servers which will manage the device during its lifecycle. The current standard defines the following four bootstrapping modes:</t>
        <ul spacing="normal">
          <li>Factory Bootstrap: An IoT device in this case is configured with all the necessary bootstrap information during manufacturing and prior to its deployment.</li>
          <li>Bootstrap from Smartcard: An IoT device retrieves and processes all the necessary bootstrap data from a Smartcard.</li>
          <li>Client Initiated Bootstrap: This mode provides a mechanism for an IoT client device to retrieve the bootstrap information from a bootstrap server. This requires the client device to have an account at the bootstrap server and credentials to obtain the necessary information securely.</li>
          <li>Server Initiated Bootstrap: In this bootstrapping mode, the bootstrapping server configures all the bootstrap information on the IoT device without receiving a request from the client. This means that the bootstrap server
needs to know if a client IoT Device is ready for bootstrapping before it can be configured. For example, a network may inform the bootstrap server of a new connecting IoT client device.</li>
        </ul>
        <t>OMA has the following characteristics:</t>
        <ul spacing="normal">
          <li>Terms: Bootstrapping, provisioning, intialization, configuration, registration.</li>
          <li>Players: Bootstrap Server, Client, Device, Manufacturer, Owner, Server, User</li>
          <li>Initial beliefs assumed in the device: The client has as a starting point, the necessary information to trust the LwM2M bootstrap server in the bootstrapping process and later in the registration (with the LwM2M management server). 
  The client has all the necessary information to either get the bootstrap information, from the factory bootstrap (pre-installed), a smartcard, or it has key material to establish a secure communication (DTLS/OSCORE) with the LwM2M bootstrap server and perform the bootstrapping.</li>
          <li>Processes: Factory Bootstrap, Bootstrap from Smartcard, Client Initiated Bootstrap and Server Initiated Bootstrap.</li>
          <li>Beliefs imparted to the device after protocol execution: After the bootstrapping is performed, the LwM2M client can register with the LwM2M servers.</li>
        </ul>
      </section>
      <section anchor="open-connectivity-foundation-ocf">
        <name>Open Connectivity Foundation (OCF)</name>
        <t>The Open Connectivity Foundation (OCF) <xref target="ocf"/> defines the process before a device is operational as onboarding.  The first step of this onboarding process is configuring the ownership, i.e., establishing a legitimate user that owns the device. For this, the user is supposed to use an Onboarding tool (OBT) and an Owner Transfer Method (OTM).</t>
        <t>The OBT is described as a logical entity that may be implemented on a single or multiple entities such as a home gateway, a device management tool, etc. OCF lists several optional OTMs. At the end of the execution of an OTM, the onboarding tool must have provisioned an Owner Credential onto the device. The following owner transfer methods are specified:</t>
        <ul spacing="normal">
          <li>Just works: Performs an un-authenticated Diffie-Hellman key exchange over Datagram Transport Layer Security (DTLS). The key exchange results in a symmetric session key which is later used for provisioning. Naturally, this mode is vulnerable to on-path attackers.</li>
          <li>Random PIN: The device generates a PIN code that is entered into the onboarding tool by the user. This pin code is used together with TLS-PSK ciphersuites for establishing a symmetric session key. OCF recommends PIN codes to have an entropy of 40 bits.</li>
          <li>Manufacturer certificate: An onboarding tool authenticates the device by verifying a manufacturer installed certificate. Similarly, the device may authenticate the onboarding tool by verifying its signature.</li>
          <li>Vendor specific: Vendors implement their own transfer method that accommodates any specific device constraints.</li>
        </ul>
        <t>Once the onboarding tool and the new device have authenticated and established secure communication, the onboarding tool provisions/configures the device with Owner credentials. Owner credentials may consist of certificates, shared keys, or Kerberos tickets for example.</t>
        <t>The OBT additionally configures/provisions information about the Access Management Service (AMS), the Credential Management  Service (CMS), and the credentials for interacting with them. The AMS is responsible for provisioning access control entries, while the CMS provisions security credentials necessary for device operation.</t>
        <t>OCF has the following characteristics:</t>
        <ul spacing="normal">
          <li>Terms: Configuration, discovery, enrollment, onboarding, provisioning, registration,</li>
          <li>Players: Client, Device, Manager, Manufacturer, Owner, Peer, Server, User</li>
          <li>Initial beliefs assumed in the device: The device needs to be associated with an owner in the onboarding process and then go through the provisioning process before being considered as trustworty.</li>
          <li>Processes: Onboarding, provisioning.</li>
          <li>Beliefs imparted to the device after protocol execution: In the provisioning phase the device receives the necessary credentials to interact with provisioning services and any other services or devices that are part of the normal operation of the device.</li>
        </ul>
      </section>
      <section anchor="bluetooth">
        <name>Bluetooth</name>
        <t>Bluetooth mesh specifies a provisioning protocol.  The goal of the provisioning phase is to securely incorporate a new Bluetooth mesh node, by completing two critical tasks. First, to authenticate the unprovisioned device and second, to create a secure link with said device to share information.</t>
        <t>The provisioning process is divided into five distinct stages summarize next:</t>
        <ul spacing="normal">
          <li>Beaconing for discover: The new unprovisioned device is discovered by the provisioner</li>
          <li>Negotiation: The unprovisioned device indicates to the provisioner a set of capabilities such as the security algorithms supported, the availability of its public key using an Out-of-Band (OOB) channel and the input/output interfaces supported</li>
          <li>Public-key exchange: The authentication method is selected by the provisioner and both devices exchange Elliptic-curve Diffie-Hellman (ECDH) public keys. These keys may be static or ephemeral. Their exchange can be done in two ways, either via Out-of-Band or directly through a Bluetooth link. Each device then generates a symmetric key, named ECDHSecret, by combining its own private key and the public key of the peer device. The EDCHSecret is used to protect communication between the two devices.</li>
          <li>Authentication: During this phase, the ECDH key exchange is authenticated. The authentication method can be Output OOB, Input OOB, static OOB, or No OOB. With Output OOB, the unprovisioned device chooses a random number and outputs that number in manner consistent with its capabilities. The provisioner then inputs this number. Then, a check confirmation value operation is performed. This involves a cryptographic exchange regarding (in this case) the random number to complete the authentication. With Input OOB, the roles are reversed, being the provisioner the entity that generates the random number. When neither of the previous authentication procedures are feasible, both the provisioner and unprovisioned device generate a random number and require the user supervising the setup to verify that values on the device and provisioner are the same.</li>
          <li>Distribution of provisioning data: At this point, the provisioning process can be protected. This involves the distribution of data such as a Network key, to secure the communications at network layer and a unicast address among other information.</li>
        </ul>
        <t>Bluetooth mesh has the following characteristics:</t>
        <ul spacing="normal">
          <li>Terms: Configuration, discovery, provisioning.</li>
          <li>Players: Client, Device, Manager, Manufacturer, Peer, Server, User</li>
          <li>Initial beliefs assumed in the device: Previously to the provisioning phase, there is no pre-shared credentials for a trust relation.</li>
          <li>Processes: Provisioning</li>
          <li>Beliefs imparted to the device after protocol execution: After the provisiong, the device trusts the provisioner entity and any other device in the network sharing its network key.</li>
        </ul>
      </section>
      <section anchor="fast-identity-online-fido-alliance">
        <name>Fast IDentity Online (FIDO) alliance</name>
        <t>The Fast IDentity Online Alliance (FIDO) is currently specifying an automatic onboarding protocol for IoT devices <xref target="fidospec"/>. The goal of this protocol is to provide a new IoT device with information for interacting securely with an online IoT platform. This protocol allows owners to choose the IoT platform for their devices at a late stage in the device lifecycle. The draft specification refers to this feature as "late binding".</t>
        <t>The FIDO IoT protocol itself is composed of one Device Initialization (DI) protocol and 3 Transfer of Ownership (TO) protocols TO0, TO1, TO2. Protocol messages are encoded in Concise Binary Object Representation (CBOR) <xref target="RFC8949"/> and can be transported over application layer protocols such as Constrained Application Protocol (CoAP) <xref target="RFC7252"/> or directly over TCP, Bluetooth etc. FIDO IoT however assumes that the device already has IP connectivity to a rendezvous server. Establishing this initial IP connectivity is explicitly stated as "out-of-scope" but the draft specification hints at the usage of Hypertext Transfer Protocol (HTTP) <xref target="RFC7230"/> proxies for IP networks and other forms of tunnelling for non-IP networks.</t>
        <t>The specification only provides a non-normative example of the DI protocol which must be executed in the factory during device manufacture. This protocol embeds initial ownership and manufacturing credentials into Restricted Operation Environment (ROE) on the device. The initial information embedded also includes a unique device identifier (called as GUID in the specification). After DI is executed, the manufacturer has an ownership voucher which is passed along the supply chain to the device owner.</t>
        <t>When a device is unboxed and powered on by the new owner, the device discovers a network-local or an Internet-based rendezvous server. Protocols (TO0, TO1, and TO2) between the device, the rendezvous server, and the new owner (as the owner onboarding service) ensure that the device and the new owner are able to authenticate each other. Thereafter, the new owner establishes cryptographic control of the device and provides it with credentials of the IoT platform which the device should used.</t>
        <t>FIDO has the following characteristics:</t>
        <ul spacing="normal">
          <li>Terms: Provisioning, onboarding, commissioning, initialisation.</li>
          <li>Players: Device, Manager, Manufacturer, Owner, Rendezvous Server,  User</li>
          <li>Initial beliefs assumed in the device: In the initial state the device is not yet associated with a specific owner. The DI process has to take place to embed owndership and manufacturing credentials in the device, the first in a chaim to create an ownership voucher that will be used to perform the transfer of ownership of the device.</li>
          <li>Processes: Device Initialize Protocol (DI), Transfer Ownership Protocol 0 (TO0), Transfer Ownership Protocol 1 (TO1), Transfer Ownership Protocol 2 (TO2)</li>
          <li>Beliefs imparted to the device after protocol execution: When the device is powered on, and all TO protocols run, the device figures out by contacting with the rendezvous server, who the owner is, authenticate with the owner. At this point the rendezvous server, and owner are able to authenticate the device.</li>
        </ul>
      </section>
      <section anchor="enrollment-over-secure-transport-est">
        <name>Enrollment over Secure Transport (EST)</name>
        <t>Enrollment over Secure Transport (EST) <xref target="RFC7030"/> defines a profile of Certificate Management over CMS (CMC) <xref target="RFC5272"/>. EST relies on Hypertext Transfer Protocol (HTTP) and Transport Layer Security (TLS) for exchanging CMC messages and allows client devices to obtain client certificates and associated Certification Authority (CA) certificates. A companion specification for using EST over secure CoAP has also been standardized <xref target="RFC9148"/>. EST assumes that some initial information is already distributed so that EST client and servers can perform mutual authentication before continuing with protocol. <xref target="RFC7030"/> further defines "Bootstrap Distribution of CA Certificates" which allows minimally configured EST clients to obtain initial trust anchors. It relies on human users to verify information such as the CA certificate "fingerprint" received over the unauthenticated TLS connection setup. After successful completion of this bootstrapping step, clients can proceed to the enrollment step during which they obtain client certificates and associated CA certificates.</t>
        <t>EST has the following characteristics:</t>
        <ul spacing="normal">
          <li>Terms: Bootstrapping, enrollment, initialization, configuration.</li>
          <li>Players: Administrator, Client, Device, Manufacturer, Owner, Peer, Server, User</li>
          <li>Initial beliefs assumed in the device: There is a process of distribution of initial information which provides both the EST client and server with the information for the EST client and server to perform mutual authentication as well as for authorization.</li>
          <li>Processes: Distribution of Certificates, Bootstrap, Enrollment</li>
          <li>Beliefs imparted to the device after protocol execution: The EST enrollment process is designed to make establishing automated certificate issuing from a trustworthy CA as simple as possible. After the processe have finished, the device is able to automatically renew its certificates through re-enrollment as it has a trust relation with the ESP server.</li>
        </ul>
      </section>
      <section anchor="bootstrapping-remote-secure-key-infrastructures-brski">
        <name>Bootstrapping Remote Secure Key Infrastructures (BRSKI)</name>
        <t>The ANIMA working group is working on a bootstrapping solution for devices that relies on 802.1AR vendor certificates called Bootstrapping Remote Secure Key Infrastructures (BRSKI) <xref target="RFC8995"/>. In addition to vendor installed IEEE 802.1AR certificates, a vendor based service on the Internet is required. Before being authenticated, a new device only needs link-local connectivity, and does not require a routable address. When a vendor provides an Internet based service, devices can be forced to join only specific domains. The document highlights that the described solution is aimed in general at non-constrained (i.e. class 2+ defined in <xref target="RFC7228"/>) devices operating in a non-challenged network. It claims to scale to thousands of devices located in hostile environments, such as ISP provided CPE devices which are drop-shipped to the end user.</t>
        <t>BRSKI has the following characteristics:</t>
        <ul spacing="normal">
          <li>Terms: Bootstrapping, provisioning, enrollment, onboarding.</li>
          <li>Players: Administrator, Client, Cloud Registrar, Configurator, Device, Domain Registrar, Initiator, Join Proxy, JRC, Manufacturer, Owner, Peer, Pledge, Server, User</li>
          <li>Initial beliefs assumed in the device: Every device has an IDevID, installed and signed by the manufacturer, which is used as a basis for establishing further trust relations. In the initial stage, when the device is deployed in a specific location it cannot securely communicate with the registrar or JRC, to be integrated into the network, so  the device and the registrar need to establish mutual trust.</li>
          <li>Processes: Discover, self-Identify, joint registrar, imprint registrar, enroll.</li>
          <li>Beliefs imparted to the device after protocol execution: After the process has finished and the device is imprinted, and trusts the registrar/JRC, through a voucher issued by the manufacturer and verified by the device.</li>
        </ul>
      </section>
      <section anchor="secure-zero-touch-provisioning-sztp">
        <name>Secure Zero Touch Provisioning (SZTP)</name>
        <t><xref target="RFC8572"/> defines a bootstrapping strategy for enabling devices to securely obtain all the configuration information with no installer input, beyond the actual physical placement and connection of cables. Their goal is to enable a secure NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/> connection to the deployment specific network management system (NMS). This bootstrapping method requires the devices to be configured with trust anchors in the form of X.509 certificates. <xref target="RFC8572"/> is similar to BRSKI based on <xref target="RFC8366"/>.</t>
        <t>SZTP has the following characteristics:</t>
        <ul spacing="normal">
          <li>Terms: Bootstrapping, provisioning, onboarding, enrollment, configuration, discovery.</li>
          <li>Players: Administrator, Bootstrap Server, Client, Device, Manufacturer, Onboarding Server, Owner, Redirect Server, Bootstrap Server, User, Owner</li>
          <li>Initial beliefs assumed in the device: Initially, the device needs have pre-configured a state that allows allows the bootstrap processs. Among other information, the trust anchor for ownership voucher, client &amp; intermediaries certificates, and list of trusted bootstrap servers and their trust anchors.</li>
          <li>Processes: Initial state, Boot sequence, Processing bootstrapping data, validating signed data, processing redirect information, processing onboarding information.</li>
          <li>Beliefs imparted to the device after protocol execution: The bootstrapping process provides the device with all the necessary information (onboarding information) to create a trust relation between the device and the bootstrap server. This allows the device to download its boot image and the necessary initial configuration. The enrollment information will allow a device to be bootstrapped and operate establishing secure connections with other systems.</li>
        </ul>
      </section>
      <section anchor="nimble-out-of-band-authentication-for-eap-eap-noob">
        <name>Nimble out-of-band authentication for EAP (EAP-NOOB)</name>
        <t>EAP-NOOB <xref target="RFC9140"/> defines an EAP method where the authentication is based on a user-assisted out-of-band (OOB) channel between the server and peer. It is intended as a generic bootstrapping solution for IoT devices which have no pre-configured authentication credentials and which are not yet registered on the authentication server. This method claims to be more generic than most ad-hoc bootstrapping solutions in that it supports many types of OOB channels. The exact in-band messages and OOB message contents are specified and not the OOB channel details. EAP-NOOB also supports IoT devices with only output (e.g. display) or only input (e.g. camera). It makes combined use of both secrecy and integrity of the OOB channel for more robust security than the ad-hoc solutions.</t>
        <t>EAP-NOOB has the following characteristics:</t>
        <ul spacing="normal">
          <li>Terms: Bootstrapping, configuration, registration.</li>
          <li>Players: Administrator, Authenticator, Client, Device, Manufacturer, Owner, Peer, Server, User</li>
          <li>Initial beliefs assumed in the device: The device does not have to have pre-installed credentials as in other EAP methods.</li>
          <li>Processes: This EAP exchange is encompassed by Initial Exchange, OOB step, Completion Exchange and Waiting Exchange.</li>
          <li>Beliefs imparted to the device after protocol execution: After EAP-NOOB is run, the device is able to trust the EAP server and the EAP authenticator by extension.</li>
        </ul>
      </section>
      <section anchor="lpwan">
        <name>LPWAN</name>
        <t>Low Power Wide Area Network (LPWAN) encompasses a wide variety of technologies whose link-layer characteristics are severely constrained in comparison to other typical IoT link-layer technologies such as Bluetooth or IEEE 802.15.4. While some LPWAN technologies rely on proprietary bootstrapping solutions which are not publicly accessible, others simply ignore the challenge of bootstrapping and key distribution. In this section, we discuss the bootstrapping methods used by LPWAN technologies covered in <xref target="RFC8376"/>.</t>
        <ul spacing="normal">
          <li>LoRaWAN <xref target="LoRaWAN"/> describes its own protocol to authenticate nodes before allowing them join a LoRaWAN network. This process is called as joining and it is based on pre-shared keys (called AppKeys in the standard). The joining procedure comprises only one exchange (join-request and join-accept) between the joining node and the network server. There are several adaptations to this joining procedure that allow network servers to delegate authentication and authorization to a backend AAA infrastructure <xref target="RFC2904"/>.</li>
          <li>Wi-SUN Alliance Field Area Network (FAN) uses IEEE 802.1X and EAP-TLS for network access authentication. It performs a 4-way handshake to establish a session keys after EAP-TLS authentication.</li>
          <li>NB-IoT relies on the traditional 3GPP mutual authentication scheme based on a shared-secret in the Subscriber Identity Module (SIM) of the device and the mobile operator.</li>
          <li>Sigfox security is based on unique device identifiers and cryptographic keys. As stated in <xref target="RFC8376"/>, although the algorithms and keying details are not publicly available, there is sufficient information to indicate that bootstrapping in Sigfox is based on pre-established credentials between the device and the Sigfox network.</li>
        </ul>
        <t>From the above, it is clear that all LPWAN technologies rely on pre-provisioned credentials for authentication between a new device and the network.</t>
        <t>LPWAN has the following characteristics:</t>
        <ul spacing="normal">
          <li>Terms: Provisioning, configuration, discovery.</li>
          <li>Players: Administrator, Authenticator, Border Router, Client, Device, Manager, Network Server, User</li>
          <li>Initial beliefs assumed in the device: The device normally has credentials that are used to directly secure the communications or to device key material to do so. There is a basic trust in the network server.</li>
          <li>Processes: Provisioning</li>
          <li>Beliefs imparted to the device after protocol execution: Either because of an authentication process that results in newly derived key material or the pre-provisioned key material is used, the device is able to exchange information securely through the network server.</li>
        </ul>
      </section>
      <section anchor="thread">
        <name>Thread</name>
        <t>Thread Group commissioning <xref target="threadcommissioning"/> introduces a two phased process i.e. Petitioning and Joining. Entities involved are leader, joiner, commissioner, joiner router, and border router. Leader is the first device in Thread network that must be commissioned using out-of-band process and is used to inject correct user generated Commissioning Credentials (can be changed later) into Thread Network. Joiner is the node that intends to get authenticated and authorized on Thread Network. Commissioner is either within the Thread Network (Native) or connected with Thread Network via a WLAN (External).</t>
        <t>Under some topologies, Joiner Router and Border Router facilitate the Joiner node to reach Native and External Commissioner, respectively. Petitioning begins before Joining process and is used to grant sole commissioning authority to a Commissioner. After an authorized Commissioner is designated, eligible thread devices can join network. Pair-wise key is shared between Commissioner and Joiner, network parameters (such as network name, security policy, etc.,) are sent out securely (using pair-wise key) by Joiner Router to Joiner for letting Joiner to join the Thread Network. Entities involved in Joining process depends on system topology i.e. location of Commissioner and Joiner. Thread networks only operate using IPv6. Thread devices can devise GUAs (Global Unicast Addresses) <xref target="RFC4291"/>. Provision also exist via Border Router, for Thread device to acquire individual global address by means of DHCPv6 or using SLAAC (Stateless Address Autoconfiguration) address derived with advertised network prefix.</t>
        <t>Thread has the following characteristics:</t>
        <ul spacing="normal">
          <li>Terms: Commissioning, discovery, provisioning.</li>
          <li>Players: Administrator, Border Agent, Border Router, Commissioner, Commissioner Candidate, Configurator, Device, End Device, End Device, Endpoint Identifier, Initiator, Joiner, Joiner Router, Owner, Peer, Responder, Server, User</li>
          <li>Initial beliefs assumed in the device: The joiner needs to share credentials with an entity that belongs to the Thread network, prior to the authentication process.</li>
          <li>Processes: Petitioning, Joining</li>
          <li>Beliefs imparted to the device after protocol execution: Once the authentication takes place, a trust relation is established between the Joiner and the Commissioner it receives the network parameters needed to be attached to the Thread network.</li>
        </ul>
      </section>
    </section>
    <section anchor="comp">
      <name>Comparison</name>
      <t>There are several stages before a device becomes fully operational. There is typically a stage where some sort of credential is installed. The nature or purpose of this credential can be varied, form being part of the IoT device authentication, to a credential from a 3rd trusted party, be it the manufacturer or the owner. Solution differ on this initial process, and in some cases this can even be done in an out-of-band fashion.</t>
      <t>After some initial credential is installed, there is a process that typically involves authentication establishing initial trust, after which  credentials and/or parameters are configured or installed into the device.</t>
      <t>Finally, when the entities involved in the process are authenticated and the configuration and key material established, the normal operation of the IoT device can take place.</t>
      <section anchor="comp-term">
        <name>Comparison of terminology</name>
        <t>The specifics of every term varies depending on the technology, but we enumerate here the basic terminology and what it means for the different solutions.</t>
        <ul spacing="normal">
          <li>
            <t>Bootstrapping:
            </t>
            <ul spacing="normal">
              <li>DPP: Client obtains the Controller's public bootstrapping key and IP address</li>
              <li>OMA: An IoT device retrieves and processes all the bootstrap data</li>
              <li>EST: installation of the Explicit TA database</li>
              <li>BRSKI: A protocol to obtain a local trust anchor.</li>
              <li>SZTP: The process by which obtains "bootstrapping data" such as conveyed information, owner certificate and owner voucher.</li>
              <li>EAP-NOOB: For an IoT device to be registered, authenticated, authorized and for it to derive key material to act as a trustworty entity in the security domain where it is deployed.</li>
            </ul>
          </li>
          <li>
            <t>configuration:
            </t>
            <ul spacing="normal">
              <li>DPP: The process performed by a Configurator by which the Enrollee is provisioned.</li>
              <li>OMA: Adding or removing an LwM2M Server Account to or from the LwM2M Client configuration.</li>
              <li>OCF: The necessary information the Device must hold to be considered as ready for normal operation.</li>
              <li>EST: The basic information (e.g., TA database) needed to initiate protocol operation.</li>
              <li>SZTP: The system configuration  to be installed into the device by the bootstrapping process.</li>
              <li>EAP-NOOB: Establishing  necessary information for the device to operate.</li>
              <li>LPWAN: In LoRaWAN, the information related to the working of the device and protocol.</li>
            </ul>
          </li>
          <li>
            <t>discovery:
            </t>
            <ul spacing="normal">
              <li>DPP: Exchange that allows obtaining specific information such as SSID, operating channel and band.</li>
              <li>OCF: Making the different resources available through URIs.</li>
              <li>BRSKI: Locating an entity that needs to take part of the bootstrapping process (e.g., Join proxy)</li>
            </ul>
          </li>
          <li>
            <t>enrollment:
            </t>
            <ul spacing="normal">
              <li>EST: The process of obtaining the credentials needed to perform the device normal operation.</li>
              <li>BRSKI: Same process describe as EST.</li>
              <li>SZTP: The process of an owner joining a manufacturer's SZTP program.</li>
            </ul>
          </li>
          <li>
            <t>provisioning:
            </t>
            <ul spacing="normal">
              <li>DPP: Securely enabling a device to establish secure associations with other devices in a network.</li>
              <li>OMA: Establishing security credentials and access control lists by a dedicated LwM2M bootstrap server.</li>
              <li>OCF: A set of processes that take place both during and after the ownership transfer. These entail configuration of credentials, and security-related resources for any services or devices that the provisioned device needs to interact with in the future.</li>
              <li>Bluetooth: The procedure by which a device is authenticated, and a secure link is established, becoming a trustworthy node in the network.</li>
              <li>FIDO: Same as FIDO onboarding.</li>
              <li>SZTP: The set of steps that take place to enable a device to establish secure connections with other systems.</li>
              <li>LPWAN: In LoRaWAN, the establishment of configuration data and credentials.</li>
            </ul>
          </li>
          <li>
            <t>intialization:
            </t>
            <ul spacing="normal">
              <li>OMA: When Bootstrap-Delete operation is used, to restore a device.</li>
              <li>FIDO: Protocol (DI), establishing basic information at manufacture.</li>
            </ul>
          </li>
          <li>
            <t>registration:
            </t>
            <ul spacing="normal">
              <li>OMA: Establishing a registration session, which is an association between the client and the server.</li>
              <li>EAP-NOOB: Add information about an IoT device in a server database.</li>
            </ul>
          </li>
          <li>
            <t>onboarding:
            </t>
            <ul spacing="normal">
              <li>OCF:  The device is considered to complete the onboarding after the ownership of the Device has been transferred and the Device provisioned.</li>
              <li>FIDO: The procedure of installing configuration information and secret to a device so that it may safely connect to and communicate with an IoT platform.</li>
              <li>SZTP: information related to the boot image a device must be running, an initial configuration the device must commit, and scripts that the device must successfully execute.</li>
            </ul>
          </li>
          <li>
            <t>commissioning:
            </t>
            <ul spacing="normal">
              <li>Thread: The process of a Thread device joining a Thread network.</li>
            </ul>
          </li>
          <li>
            <t>imprint:
            </t>
            <ul spacing="normal">
              <li>BRSKI: The process by which a device obtains the needed information to act as trustworthy entity within the network or domain</li>
            </ul>
          </li>
        </ul>
      </section>
      <section anchor="comp-players">
        <name>Comparison of players</name>
        <t>In this section we classify the different players.</t>
        <t>Human User: user</t>
        <t>Device that intends to securely join a network: pledge, device, client, peer, persona, enrollee, candidate</t>
        <t>Entity that makes the device: Manufacturer</t>
        <t>Entity that owns the device: owner, manager</t>
        <t>Entity with which the device establishes a connection: IoT platform, Rendezvous Server, Server,</t>
        <t>Entity that aids in  the process: Join Proxy, Bootstrap Server, Onboarding Server, Border Router</t>
        <t>Person that manages a deployment or system: Administrator</t>
        <t>Entity that steers the process for the IoT device to securely join the network: Configurator, Bootstrap Server, Rendezvous Server, JRC, Onboarding/Redirect Server, Commissioner.</t>
        <t>External or third-party entity that intervenes in the process:  Registrar, MASA</t>
      </section>
      <section anchor="comp-beliefs">
        <name>Comparison of initial beliefs</name>
        <t>The IoT devices may have different initial beliefs depending on the credentials pre-installed, during the manufacturing process or prior to being turned on. There are cases where the initial credentials that need to be shared to establish basic trust, or they are exchanged during one of the procedures after the device is turned on, not installed during manufacturing.</t>
        <section anchor="no-initial-trust-established">
          <name>No initial trust established</name>
          <t>EAP-NOOB does not require initial configuration of credentials to establish trust, since its done using the out-of-band process.</t>
          <t>The OCF device starts as unowned. It has to perform an ownership transfer, to establish basic trust to perform onboarding and  provisioning. Depending on the Owener Transfer Mode (OTM) it can be considered to have not initial trust based on the credentials installed.</t>
          <t>Bluetooth devices start as unprovisioned. Initial trust is established as a consequence of exchanging public keys and performing the authentication. If the public keys are ephemeral, there is no initial credential establishment.</t>
        </section>
        <section anchor="initial-trust-based-on-the-credentials-installed">
          <name>Initial trust based on the credentials installed</name>
          <t>These credentials may very from the time of installing, and the entity to which it related. In this sense, they could be from the  manufacturer, owner or other entity.</t>
          <t>FIDO devices have installed during the manufacturing process a set of ownership credentials (i.e., ownership voucher) and additional information to determine the current owner of the device. Hence, there is an initial trust from the IoT device and the owner. With this basic setup, and and the cooperation among device, owner and rendezvous server, the onboarding process can take place.</t>
          <t>EST devices are configured with the needed information to perform mutual authentication and for authorization between the EST client and server.</t>
          <t>BRSKI have manufacturer-installed certificates as starting point to establish trust.</t>
          <t>SZTP have pre-configured initial state which provides the basis for trust.</t>
          <t>LPWAN specifics depends on the technology, but they all have in common some pre-installed credentials that allows the establishment of trust and to secure the communications.</t>
          <t>Thread devices, share credentials as well to establish trust.</t>
          <t>OMA devices can have all the necessary information to start working on the network where they are deployed, if they have the factory bootstrap, hence all needed credentials to establish trust. There need to be installed some basic credentials to establish trust with the bootstrap server and perform the bootstrapping.</t>
          <t>DPP initial trust is established during the bootstrapping where the public key is transmitted.</t>
        </section>
      </section>
      <section anchor="comp-process">
        <name>Comparison of processes</name>
        <t>Analyzing the different terms used over the different solutions reviewed in this document, we can identify several processes. These are named differently in some cases, and not every technologies considers them all as part of their the following common concepts:</t>
        <ul spacing="normal">
          <li>To refer to the process previous to the device being turned on, in which some information, or credentials are installed into the device. This process is commonly referred to as manufacture. Is in this phase where the IoT devices have installed the needed information (specifics depend on the technology) to provide the basis for trust and to authenticate other entities.</li>
          <li>To refer to the process after the device is turned on and intends to locate the entity with which it has to communicate to start the authentication process to be integrated into the security domain. Here is where the device start the process to get to perform its normal operation.</li>
          <li>To the process by which the device obtains additional credentials, in addition to what it already had installed before being turned on.</li>
          <li>To the process by which the device is authenticated and established a trust relation.</li>
        </ul>
      </section>
      <section anchor="comp-impart">
        <name>Comparison of knowledge imparted to the device</name>
        <t>Even though the devices might start from a different place, in terms of initial credentials as basis for trust, when they finish their processes, they become trusted parties within the domain they are deployed or at least have a trust relation with a specific entity. The difference may strive in the number of trust relations are stablished during the process, as they may have not only established a trust relation with local entities where they perform their operation, but other external entities as well.</t>
        <t>In FIDO, once the onboarding process has taken place, the IoT device is mutually authenticated with the current owner, and the needed secrets and configuration data is installed into the device, which as a result is able to connect and interact securely with the target IoT platform.</t>
        <t>In EAP-NOOB, once the bootstrapping is completed, the IoT device not only has a trust relation with the EAP server, but the EAP authenticator can be established as well, based on the shared credentials that are derived during the authentication process.</t>
        <t>In Bluetooth the trust is expanded to the local network as there is key material shared among the different entities of the network.</t>
        <t>In Thread once the joiner has successfully completed the process, it can communicate directly with all Thread devices in the network.</t>
        <t>LPWAN has a more limited scope and they usually have specific keys for applications and network communications.</t>
        <t>EST provides the devices with the enrollment information such as certificates and symmetric keys that can be used to establish trust with different peers.</t>
        <t>BRSKI after running it is able to verify that the communicating entities are who they claim to be, and obtain domain specific certificates to act as trustworhty entities within the domain.</t>
        <t>SZTP after running, the device has obtained onboarding information and is equipped to establish secure connections with other systems.</t>
      </section>
    </section>
    <section anchor="security-considerations">
      <name>Security Considerations</name>
      <t>This draft does not take any posture on the security properties of the different bootstrapping protocols discussed. Specific security considerations of bootstrapping protocols are present in the respective specifications.</t>
      <t>Nonetheless, we briefly discuss some important security aspects which are not fully explored in various specifications.</t>
      <t>Firstly, an IoT system may deal with authorization for resources and services separately from initial security setup in terms of timing as well as protocols. As an example, two resource-constrained devices A and B may perform mutual authentication using credentials provided by an offline third-party X before device A obtains authorization for running a particular application on device B from an online third-party Y. In some cases, authentication and authorization maybe tightly coupled, e.g., successful authentication also means successful authorization.</t>
      <t>Secondly, initial security setup of IoT devices may be necessary several times during the device lifecycle since keys have limited lifetimes and devices may be lost or resold. Protocols and systems must have adequate provisions for revocation and fresh security setup. A rerun of the security setup mechanism must be as secure as the initial security setup regardless of whether it is done manually or automatically over the network.</t>
      <t>Lastly, some IoT networks use a common group key for multicast and broadcast traffic. As the number of devices in a network increase over time, a common group key may not be scalable and the same network may need to be split into separate groups with different keys. Bootstrapping and provisioning protocols may need appropriate mechanisms for identifying and distributing keys to the current member devices of each group.</t>
    </section>
    <section anchor="iana-considerations">
      <name>IANA Considerations</name>
      <t>There are no IANA considerations for this document.</t>
    </section>
    <section anchor="acknowledgements">
      <name>Acknowledgements</name>
      <t>We would like to thank Tuomas Aura, Hannes Tschofenig, and Michael Richardson for providing extensive feedback as well as Rafa Marin-Lopez for his support.</t>
    </section>
  </middle>
  <back>
    <references>
      <name>Informative References</name>
      <reference anchor="RFC2904">
        <front>
          <title>AAA Authorization Framework</title>
          <author fullname="J. Vollbrecht" initials="J." surname="Vollbrecht">
            <organization/>
          </author>
          <author fullname="P. Calhoun" initials="P." surname="Calhoun">
            <organization/>
          </author>
          <author fullname="S. Farrell" initials="S." surname="Farrell">
            <organization/>
          </author>
          <author fullname="L. Gommans" initials="L." surname="Gommans">
            <organization/>
          </author>
          <author fullname="G. Gross" initials="G." surname="Gross">
            <organization/>
          </author>
          <author fullname="B. de Bruijn" initials="B." surname="de Bruijn">
            <organization/>
          </author>
          <author fullname="C. de Laat" initials="C." surname="de Laat">
            <organization/>
          </author>
          <author fullname="M. Holdrege" initials="M." surname="Holdrege">
            <organization/>
          </author>
          <author fullname="D. Spence" initials="D." surname="Spence">
            <organization/>
          </author>
          <date month="August" year="2000"/>
          <abstract>
            <t>This memo serves as the base requirements for Authorization of Internet Resources and Services (AIRS).  It presents an architectural framework for understanding the authorization of Internet resources and services and derives requirements for authorization protocols.  This memo provides information for the Internet community.</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="2904"/>
        <seriesInfo name="DOI" value="10.17487/RFC2904"/>
      </reference>
      <reference anchor="RFC4291">
        <front>
          <title>IP Version 6 Addressing Architecture</title>
          <author fullname="R. Hinden" initials="R." surname="Hinden">
            <organization/>
          </author>
          <author fullname="S. Deering" initials="S." surname="Deering">
            <organization/>
          </author>
          <date month="February" year="2006"/>
          <abstract>
            <t>This specification defines the addressing architecture of the IP Version 6 (IPv6) protocol.  The document includes the IPv6 addressing model, text representations of IPv6 addresses, definition of IPv6 unicast addresses, anycast addresses, and multicast addresses, and an IPv6 node's required addresses.</t>
            <t>This document obsoletes RFC 3513, "IP Version 6 Addressing Architecture".   [STANDARDS-TRACK]</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="4291"/>
        <seriesInfo name="DOI" value="10.17487/RFC4291"/>
      </reference>
      <reference anchor="RFC5272">
        <front>
          <title>Certificate Management over CMS (CMC)</title>
          <author fullname="J. Schaad" initials="J." surname="Schaad">
            <organization/>
          </author>
          <author fullname="M. Myers" initials="M." surname="Myers">
            <organization/>
          </author>
          <date month="June" year="2008"/>
          <abstract>
            <t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t>
            <t>1.  The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t>
            <t>2.  The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t>
            <t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition.  [STANDARDS-TRACK]</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="5272"/>
        <seriesInfo name="DOI" value="10.17487/RFC5272"/>
      </reference>
      <reference anchor="RFC6241">
        <front>
          <title>Network Configuration Protocol (NETCONF)</title>
          <author fullname="R. Enns" initials="R." role="editor" surname="Enns">
            <organization/>
          </author>
          <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund">
            <organization/>
          </author>
          <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder">
            <organization/>
          </author>
          <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman">
            <organization/>
          </author>
          <date month="June" year="2011"/>
          <abstract>
            <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="6241"/>
        <seriesInfo name="DOI" value="10.17487/RFC6241"/>
      </reference>
      <reference anchor="RFC7030">
        <front>
          <title>Enrollment over Secure Transport</title>
          <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin">
            <organization/>
          </author>
          <author fullname="P. Yee" initials="P." role="editor" surname="Yee">
            <organization/>
          </author>
          <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins">
            <organization/>
          </author>
          <date month="October" year="2013"/>
          <abstract>
            <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="7030"/>
        <seriesInfo name="DOI" value="10.17487/RFC7030"/>
      </reference>
      <reference anchor="RFC7228">
        <front>
          <title>Terminology for Constrained-Node Networks</title>
          <author fullname="C. Bormann" initials="C." surname="Bormann">
            <organization/>
          </author>
          <author fullname="M. Ersue" initials="M." surname="Ersue">
            <organization/>
          </author>
          <author fullname="A. Keranen" initials="A." surname="Keranen">
            <organization/>
          </author>
          <date month="May" year="2014"/>
          <abstract>
            <t>The Internet Protocol Suite is increasingly used on small devices with severe constraints on power, memory, and processing resources, creating constrained-node networks.  This document provides a number of basic terms that have been useful in the standardization work for constrained-node networks.</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="7228"/>
        <seriesInfo name="DOI" value="10.17487/RFC7228"/>
      </reference>
      <reference anchor="RFC7252">
        <front>
          <title>The Constrained Application Protocol (CoAP)</title>
          <author fullname="Z. Shelby" initials="Z." surname="Shelby">
            <organization/>
          </author>
          <author fullname="K. Hartke" initials="K." surname="Hartke">
            <organization/>
          </author>
          <author fullname="C. Bormann" initials="C." surname="Bormann">
            <organization/>
          </author>
          <date month="June" year="2014"/>
          <abstract>
            <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
            <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="7252"/>
        <seriesInfo name="DOI" value="10.17487/RFC7252"/>
      </reference>
      <reference anchor="RFC7230">
        <front>
          <title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
          <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding">
            <organization/>
          </author>
          <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke">
            <organization/>
          </author>
          <date month="June" year="2014"/>
          <abstract>
            <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the "http" and "https" Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="7230"/>
        <seriesInfo name="DOI" value="10.17487/RFC7230"/>
      </reference>
      <reference anchor="RFC8040">
        <front>
          <title>RESTCONF Protocol</title>
          <author fullname="A. Bierman" initials="A." surname="Bierman">
            <organization/>
          </author>
          <author fullname="M. Bjorklund" initials="M." surname="Bjorklund">
            <organization/>
          </author>
          <author fullname="K. Watsen" initials="K." surname="Watsen">
            <organization/>
          </author>
          <date month="January" year="2017"/>
          <abstract>
            <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="8040"/>
        <seriesInfo name="DOI" value="10.17487/RFC8040"/>
      </reference>
      <reference anchor="RFC8366">
        <front>
          <title>A Voucher Artifact for Bootstrapping Protocols</title>
          <author fullname="K. Watsen" initials="K." surname="Watsen">
            <organization/>
          </author>
          <author fullname="M. Richardson" initials="M." surname="Richardson">
            <organization/>
          </author>
          <author fullname="M. Pritikin" initials="M." surname="Pritikin">
            <organization/>
          </author>
          <author fullname="T. Eckert" initials="T." surname="Eckert">
            <organization/>
          </author>
          <date month="May" year="2018"/>
          <abstract>
            <t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a "voucher".</t>
            <t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t>
            <t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="8366"/>
        <seriesInfo name="DOI" value="10.17487/RFC8366"/>
      </reference>
      <reference anchor="RFC8376">
        <front>
          <title>Low-Power Wide Area Network (LPWAN) Overview</title>
          <author fullname="S. Farrell" initials="S." role="editor" surname="Farrell">
            <organization/>
          </author>
          <date month="May" year="2018"/>
          <abstract>
            <t>Low-Power Wide Area Networks (LPWANs) are wireless technologies with characteristics such as large coverage areas, low bandwidth, possibly very small packet and application-layer data sizes, and long battery life operation.  This memo is an informational overview of the set of LPWAN technologies being considered in the IETF and of the gaps that exist between the needs of those technologies and the goal of running IP in LPWANs.</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="8376"/>
        <seriesInfo name="DOI" value="10.17487/RFC8376"/>
      </reference>
      <reference anchor="RFC8572">
        <front>
          <title>Secure Zero Touch Provisioning (SZTP)</title>
          <author fullname="K. Watsen" initials="K." surname="Watsen">
            <organization/>
          </author>
          <author fullname="I. Farrer" initials="I." surname="Farrer">
            <organization/>
          </author>
          <author fullname="M. Abrahamsson" initials="M." surname="Abrahamsson">
            <organization/>
          </author>
          <date month="April" year="2019"/>
          <abstract>
            <t>This document presents a technique to securely provision a networking device when it is booting in a factory-default state.  Variations in the solution enable it to be used on both public and private networks.  The provisioning steps are able to update the boot image, commit an initial configuration, and execute arbitrary scripts to address auxiliary needs.  The updated device is subsequently able to establish secure connections with other systems.  For instance, a device may establish NETCONF (RFC 6241) and/or RESTCONF (RFC 8040) connections with deployment-specific network management systems.</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="8572"/>
        <seriesInfo name="DOI" value="10.17487/RFC8572"/>
      </reference>
      <reference anchor="RFC8949">
        <front>
          <title>Concise Binary Object Representation (CBOR)</title>
          <author fullname="C. Bormann" initials="C." surname="Bormann">
            <organization/>
          </author>
          <author fullname="P. Hoffman" initials="P." surname="Hoffman">
            <organization/>
          </author>
          <date month="December" year="2020"/>
          <abstract>
            <t>The Concise Binary Object Representation (CBOR) is a data format whose design goals include the possibility of extremely small code size, fairly small message size, and extensibility without the need for version negotiation. These design goals make it different from earlier binary serializations such as ASN.1 and MessagePack.</t>
            <t>This document obsoletes RFC 7049, providing editorial improvements, new details, and errata fixes while keeping full compatibility with the interchange format of RFC 7049.  It does not create a new version of the format.</t>
          </abstract>
        </front>
        <seriesInfo name="STD" value="94"/>
        <seriesInfo name="RFC" value="8949"/>
        <seriesInfo name="DOI" value="10.17487/RFC8949"/>
      </reference>
      <reference anchor="RFC8995">
        <front>
          <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
          <author fullname="M. Pritikin" initials="M." surname="Pritikin">
            <organization/>
          </author>
          <author fullname="M. Richardson" initials="M." surname="Richardson">
            <organization/>
          </author>
          <author fullname="T. Eckert" initials="T." surname="Eckert">
            <organization/>
          </author>
          <author fullname="M. Behringer" initials="M." surname="Behringer">
            <organization/>
          </author>
          <author fullname="K. Watsen" initials="K." surname="Watsen">
            <organization/>
          </author>
          <date month="May" year="2021"/>
          <abstract>
            <t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this, a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="8995"/>
        <seriesInfo name="DOI" value="10.17487/RFC8995"/>
      </reference>
      <reference anchor="RFC9140">
        <front>
          <title>Nimble Out-of-Band Authentication for EAP (EAP-NOOB)</title>
          <author fullname="T. Aura" initials="T." surname="Aura">
            <organization/>
          </author>
          <author fullname="M. Sethi" initials="M." surname="Sethi">
            <organization/>
          </author>
          <author fullname="A. Peltonen" initials="A." surname="Peltonen">
            <organization/>
          </author>
          <date month="December" year="2021"/>
          <abstract>
            <t>The Extensible Authentication Protocol (EAP) provides support for multiple authentication methods. This document defines the EAP-NOOB authentication method for nimble out-of-band (OOB) authentication and key derivation. The EAP method is intended for bootstrapping all kinds of Internet-of-Things (IoT) devices that have no preconfigured authentication credentials. The method makes use of a user-assisted, one-directional, out-of-band (OOB) message between the peer device and authentication server to authenticate the in-band key exchange. The device must have a nonnetwork input or output interface, such as a display, microphone, speaker, or blinking light, that can send or receive dynamically generated messages of tens of bytes in length.</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="9140"/>
        <seriesInfo name="DOI" value="10.17487/RFC9140"/>
      </reference>
      <reference anchor="RFC9148">
        <front>
          <title>EST-coaps: Enrollment over Secure Transport with the Secure Constrained Application Protocol</title>
          <author fullname="P. van der Stok" initials="P." surname="van der Stok">
            <organization/>
          </author>
          <author fullname="P. Kampanakis" initials="P." surname="Kampanakis">
            <organization/>
          </author>
          <author fullname="M. Richardson" initials="M." surname="Richardson">
            <organization/>
          </author>
          <author fullname="S. Raza" initials="S." surname="Raza">
            <organization/>
          </author>
          <date month="April" year="2022"/>
          <abstract>
            <t>Enrollment over Secure Transport (EST) is used as a certificate provisioning protocol over HTTPS. Low-resource devices often use the lightweight Constrained Application Protocol (CoAP) for message exchanges. This document defines how to transport EST payloads over secure CoAP (EST-coaps), which allows constrained devices to use existing EST functionality for provisioning certificates.</t>
          </abstract>
        </front>
        <seriesInfo name="RFC" value="9148"/>
        <seriesInfo name="DOI" value="10.17487/RFC9148"/>
      </reference>
      <reference anchor="simpleconn" target="https://www.wi-fi.org/download.php?file=/sites/default/files/private/Wi-Fi_Simple_Configuration_Technical_Specification_v2.0.7.pdf">
        <front>
          <title>Wi-Fi Simple Configuration</title>
          <author>
            <organization>Wi-Fi Alliance</organization>
          </author>
          <date year="2019"/>
        </front>
        <seriesInfo name="Version" value="2.0.7"/>
      </reference>
      <reference anchor="Sethi14" target="http://dx.doi.org/10.1145/2632048.2632049">
        <front>
          <title>Secure Bootstrapping of Cloud-Managed Ubiquitous Displays</title>
          <author initials="M." surname="Sethi" fullname="Mohit Sethi">
            <organization>Ericsson</organization>
          </author>
          <author initials="E." surname="Oat" fullname="Elena Oat">
            <organization>Aalto University</organization>
          </author>
          <author initials="M." surname="Di Francesco" fullname="Mario Di Francesco">
            <organization>Aalto University</organization>
          </author>
          <author initials="T." surname="Aura" fullname="Tuomas Aura">
            <organization>Aalto University</organization>
          </author>
          <date year="2014" month="September"/>
        </front>
        <seriesInfo name="Proceedings" value="of ACM International Joint Conference on Pervasive and Ubiquitous Computing (UbiComp 2014), pp. 739-750, Seattle, USA"/>
      </reference>
      <reference anchor="dpp" target="https://www.wi-fi.org/download.php?file=/sites/default/files/private/Wi-Fi_Easy_Connect_Specification_v2.0.pdf">
        <front>
          <title>Wi-Fi Device Provisioning Protocol (DPP)</title>
          <author>
            <organization>Wi-Fi Alliance</organization>
          </author>
          <date year="2018"/>
        </front>
        <seriesInfo name="Wi-Fi Alliance" value="Specification version 1.1"/>
      </reference>
      <reference anchor="LoRaWAN" target="https://lora-alliance.org/resource_hub/lorawan-specification-v1-1/">
        <front>
          <title>LoRa Specification V1.1</title>
          <author>
            <organization>LoRa Alliance</organization>
          </author>
          <date year="2017" month="October"/>
        </front>
        <seriesInfo name="LoRa Alliance" value="Version: 1.1"/>
      </reference>
      <reference anchor="oma" target="https://openmobilealliance.org/release/LightweightM2M/V1_2_1-20221209-A/OMA-TS-LightweightM2M_Core-V1_2_1-20221209-A.pdf">
        <front>
          <title>Lightweight Machine to Machine Technical Specification: Core</title>
          <author>
            <organization>Open Mobile Alliance</organization>
          </author>
          <date year="2022" month="December"/>
        </front>
        <seriesInfo name="Approved Version" value="1.2.1"/>
      </reference>
      <reference anchor="ocf" target="https://openconnectivity.org/specs/OCF_Security_Specification_v2.2.2.pdf">
        <front>
          <title>OCF Security Specification</title>
          <author>
            <organization>Open Connectivity Foundation</organization>
          </author>
          <date year="2021" month="February"/>
        </front>
        <seriesInfo name="Version" value="2.2.2"/>
      </reference>
      <reference anchor="threadcommissioning">
        <front>
          <title>Thread Commissioning</title>
          <author>
            <organization>Thread Group</organization>
          </author>
          <date year="2015"/>
        </front>
      </reference>
      <reference anchor="fidospec" target="https://fidoalliance.org/specifications/download-iot-specifications/">
        <front>
          <title>FIDO Device Onboard Specification</title>
          <author>
            <organization>Fast Identity Online Alliance</organization>
          </author>
          <date year="2021" month="March"/>
        </front>
        <seriesInfo name="Fido Alliance" value="Version: 1.0"/>
      </reference>
    </references>
  </back>
  <!-- ##markdown-source:
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

-->

</rfc>
